localApp {
  akka.remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }
}

remoteApp {
  akka.remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2552
    }
  }
}

akka {
  actor {
    provider = remote

    # Set this to on to enable serialization-bindings defined in
    # additional-serialization-bindings. Those are by default not included
    # for backwards compatibility reasons. They are enabled by default if
    # akka.remote.artery.enabled=on.
    #enable-additional-serialization-bindings = on

    #allow-java-serialization = off
    warn-about-java-serializer-usage = off
  }

  #akka.actor.serializers {
  #  kryo = "com.twitter.chill.akka.AkkaSerializer"
  #}

  #akka.actor.serialization-bindings {
  #  "java.io.Serializable" = kryo
  #}


  # Use slf4j (backed by logback) for logging, additional configuration
  # can be done in logback.xml
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = INFO


}

#TODO delete these
# Configuration related to the app is in its own namespace
distributed-workers {
  # Each worker pings the master with this interval
  # to let it know that it is alive
  worker-registration-interval = 10s
  # If a worker hasn't gotten in touch in this long
  # it is removed from the set of workers
  consider-worker-dead-after = 60s

  # If a workload hasn't finished in this long it
  # is considered failed and is retried
  work-timeout = 10s

}